# syntax=docker/dockerfile:1

# Stage 1: Build the frontend
FROM node:lts-bookworm-slim as frontend-builder

WORKDIR /app/fai-frontend

COPY fai-frontend/package*.json ./

RUN npm install

COPY fai-frontend/ .
COPY fai-backend/fai_backend ./src/fai_backend

RUN npm run build
RUN rm -rf ./src/fai_backend

# Stage 2: Set up the backend
FROM python:3.11.9-slim-bookworm

RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  libmagic1 \
  libgl1 \
  libgl1-mesa-glx \
  libglib2.0-0

# Needed for images and PDFs.
RUN apt-get install -y --no-install-recommends \
  poppler-utils \
  tesseract-ocr

RUN apt-get clean && rm -rf /var/lib/apt/lists/*

ENV POETRY_HOME="/opt/poetry" \
  POETRY_CACHE_DIR="/tmp/poetry_cache" \
  POETRY_VIRTUALENVS_CREATE=false \
  POETRY_NO_INTERACTION=1 \
  PATH="$POETRY_HOME/bin:$PATH"

# RUN curl -sSL https://install.python-poetry.org | python3 -
RUN pip install poetry

WORKDIR /app

COPY ./fai-backend/poetry.lock ./fai-backend/pyproject.toml ./

RUN poetry lock --no-update
RUN poetry install --only main --no-root
RUN rm -rf $POETRY_CACHE_DIR

COPY ./fai-backend/fai_backend ./fai_backend

COPY --from=frontend-builder /app/fai-frontend/dist ./fai_backend/static
RUN rm -rf /app/fai-frontend

ENV HOST=0.0.0.0
ENV PORT=80

CMD uvicorn fai_backend.main:app --host $HOST --port $PORT
