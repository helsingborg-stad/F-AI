# syntax=docker/dockerfile:1

# Stage: Build the frontend and copy the static files to the backend
FROM node:lts-bookworm-slim AS frontend-builder

WORKDIR /app/fai-frontend

COPY fai-frontend/package*.json ./

RUN npm install

COPY fai-frontend/ .
COPY fai-backend/fai_backend ./src/fai_backend

RUN npm run build
RUN rm -rf ./src/fai_backend


# Stage: Build requirements for the backend
FROM python:3.11.9-slim-bookworm AS requirements-stage

WORKDIR /tmp

RUN pip install poetry && pip install poetry-plugin-export

COPY ./fai-backend/pyproject.toml ./fai-backend/poetry.lock* ./

RUN poetry export -f requirements.txt -o requirements.txt --without-hashes --with unstructured


# Stage: Build the final image with the backend and the frontend
FROM python:3.11.9-slim-bookworm

RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  libmagic1 \
  libgl1 \
  libgl1-mesa-glx \
  libglib2.0-0

# Needed for images and PDFs.
RUN apt-get install -y --no-install-recommends \
  poppler-utils \
  tesseract-ocr

RUN apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY --from=requirements-stage /tmp/requirements.txt .

RUN pip install --no-cache-dir --upgrade -r requirements.txt

COPY ./fai-backend/fai_backend ./fai_backend

COPY --from=frontend-builder /app/fai-frontend/dist ./fai_backend/static
RUN rm -rf /app/fai-frontend

CMD ["uvicorn", "fai_backend.main:app", "--host", "0.0.0.0",  "--port", "80"]
