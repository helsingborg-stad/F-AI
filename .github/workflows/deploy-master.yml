name: Build and push docker image to github registry. Deploy to Jelastic.

on:
  release:
    types:
      - released
    branches:
      - master

jobs:

  build-backend:
    runs-on: codebuild-f-ai-builder-${{ github.run_id }}-${{ github.run_attempt }}-ubuntu-7.0-medium

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Repository Variable to Lowercase
        id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if backend image exists
        id: check-backend-image
        run: |
          if docker manifest inspect ghcr.io/${{ steps.string.outputs.lowercase }}-backend:${{ github.event.release.tag_name }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Docker meta
        id: meta
        if: env.exists == 'false'
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ghcr.io/${{ steps.string.outputs.lowercase }}-backend
          tags: |
            # set latest tag for default branch
            type=raw,value=${{github.event.release.tag_name}}
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
            type=sha,format=long

      - name: Build and push
        if: env.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          platforms: linux/amd64
          file: ./backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: false
          build-args: GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }}

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Repository Variable to Lowercase
        id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if frontend image exists
        id: check-frontend-image
        run: |
          if docker manifest inspect ghcr.io/${{ steps.string.outputs.lowercase }}-frontend:${{ github.event.release.tag_name }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Docker meta
        id: meta
        if: env.exists == 'false'
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ghcr.io/${{ steps.string.outputs.lowercase }}-frontend
          tags: |
            # set latest tag for default branch
            type=raw,value=${{github.event.release.tag_name}}
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
            type=sha,format=long

      - name: Build and push
        if: env.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          platforms: linux/amd64
          file: ./frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: false
          build-args: GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }}
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Deploy backend to Jelastic
        run: |
          curl --request GET --url 'https://app.jelastic.elastx.net/1.0/environment/control/rest/redeploycontainerbyid?session=${{ secrets.JELASTIC_API_KEY }}&nodeId=${{ vars.JELASTIC_NODE_ID_RELEASE_BACKEND }}&envName=${{ vars.JELASTIC_ENV_NAME_RELEASE }}&tag=${{github.event.release.tag_name}}&useExistingVolumes=true'
        shell: bash
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, deploy-backend]
    steps:
      - name: Deploy frontend to Jelastic
        run: |
          curl --request GET --url 'https://app.jelastic.elastx.net/1.0/environment/control/rest/redeploycontainerbyid?session=${{ secrets.JELASTIC_API_KEY }}&nodeId=${{ vars.JELASTIC_NODE_ID_RELEASE_FRONTEND }}&envName=${{ vars.JELASTIC_ENV_NAME_RELEASE }}&tag=${{github.event.release.tag_name}}&useExistingVolumes=true'
        shell: bash